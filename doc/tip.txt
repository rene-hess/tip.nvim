*tip.nvim.txt*       A Neovim plugin for displaying tips in a floating window.

==============================================================================
CONTENTS                                     *tip.nvim* *tip-nvim*

    1. Introduction......................|tip.nvim-intro|
    2. Setup and Configuration...........|tip.nvim-setup|
    3. API Reference.....................|tip.nvim-api|
    4. Example Configuration.............|tip.nvim-example|

==============================================================================
INTRODUCTION                               *tip.nvim-intro*

`tip.nvim` is a Neovim plugin that displays random tips in a floating window. 
You can provide the plugin with a Markdown string, where each section (denoted 
by `#`) is a separate tip. When the |tip.show_tip()| function is called, the 
plugin selects a random tip and displays it.

==============================================================================
SETUP AND CONFIGURATION                    *tip.nvim-setup*

To use `tip.nvim`, you must configure it during initialization. The configuration
is done through the `setup` function, which accepts the following options:

- `tips` (string, required): A Markdown string containing the tips. Each 
  section of the Markdown content (denoted by `#`) is treated as a separate tip.

- `layout` (table, optional): A table specifying the layout of the floating 
  window. The layout supports:
    - `width` (number): The relative width of the floating window. Default is `0.8`.
    - `height` (number): The relative height of the floating window. Default is `0.8`.
    - `border` (string): The border style for the floating window. Supports all 
      styles available in |nvim_open_win|. Default is `'rounded'`.

Example setup:

>lua
    require('tip').setup {
      tips = "# Tip 1\n\nThis is the first tip.\n\n# Tip 2\n\nThis is the second tip.",
      layout = {
        width = 0.6,
        height = 0.7,
        border = 'solid',
      },
    }
<

==============================================================================
API REFERENCE                              *tip.nvim-api*

The following functions are provided by `tip.nvim`:

1. |tip.setup()|                                      *tip.setup()*
   Configures the plugin with the provided options.

   Parameters:
   - `opts` (table): Configuration options. See |tip.nvim-setup| for details.

2. |tip.show_tip()|                                   *tip.show_tip()*
   Displays a random tip from the configured tips in a floating window.

==============================================================================
EXAMPLE CONFIGURATION                      *tip.nvim-example*

Here is an example configuration using `lazy.nvim`. You can place the following 
configuration in your `lazy.nvim` setup to integrate `tip.nvim`:

>lua
    {
      'rene-hess/tip.nvim',
      config = function()
        -- Read tips from a markdown file next to this file
        local script_dir = vim.fn.fnamemodify(debug.getinfo(1, 'S').source:sub(2), ':h')
        local tips_file = script_dir .. '/tips.md'
        if vim.fn.filereadable(tips_file) == 0 then
          print 'Could not open tips file'
          return
        end
        local tips = table.concat(vim.fn.readfile(tips_file), '\n')

        -- Configure tip.nvim
        require('tip').setup {
          tips = tips,
          layout = {
            width = 0.8,
            height = 0.8,
            border = 'rounded',
          },
        }

        -- Show tip on startup
        vim.api.nvim_create_autocmd('VimEnter', {
          callback = function()
            require('tip').show_tip()
          end,
        })
      end,
    }
<

==============================================================================
vim:tw=78:ts=8:ft=help:norl:
